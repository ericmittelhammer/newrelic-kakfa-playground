---

- name: Install Docker on All Swarm nodes
  become: yes
  hosts: swarm_nodes
  tags:
    - provision
  roles:
    - name: docker

- hosts: swarm_managers[0]
  become: yes
  tags:
    - provision
    - swarm
  tasks:
    - name: Get swarm status
      shell: "docker info | awk '/Swarm: (.+)/ { print $2 }'"
      register: swarm_status
    - name: Create Swarm
      command: "docker swarm init --advertise-addr {{ private_ip }}"
      when: swarm_status.stdout != 'active'
    - name: Get manager token
      command: "docker swarm join-token -q manager"
      register: manager_token
    - name: Get worker token
      command: "docker swarm join-token -q worker"
      register: worker_token
    
- hosts: swarm_managers[1:]
  become: yes
  tags:
    - provision
    - swarm
  tasks:
    - name: Get swarm status
      shell: "docker info | awk '/Swarm: (.+)/ { print $2 }'"
      register: swarm_status
    - name: Join swarm as manager
      command: "docker swarm join --token {{ hostvars[groups['swarm_managers'][0]]['manager_token']['stdout'] }} {{ hostvars[groups['swarm_managers'][0]]['private_ip'] }}"
      when: swarm_status.stdout != 'active'
      
- hosts: swarm_workers
  become: yes
  tags:
    - provision
    - swarm
  tasks:
    - name: Get swarm status
      shell: "docker info | awk '/Swarm: (.+)/ { print $2 }'"
      register: swarm_status
    - name: Join swarm as worker
      command: "docker swarm join --token {{ hostvars[groups['swarm_managers'][0]]['worker_token']['stdout'] }} {{ hostvars[groups['swarm_managers'][0]]['private_ip'] }}"
      when: swarm_status.stdout != 'active'
      